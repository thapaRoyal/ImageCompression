"use strict";function e(e,t,o,n){return new(o||(o=Promise))(function(i,r){function s(e){try{c(n.next(e))}catch(e){r(e)}}function a(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?i(e.value):(t=e.value,t instanceof o?t:new o(function(e){e(t)})).then(s,a)}c((n=n.apply(e,t||[])).next())})}Object.defineProperty(exports,"__esModule",{value:!0}),"function"==typeof SuppressedError&&SuppressedError;const t=new Map;function o(o){return e(this,void 0,void 0,function*(){if(t.has(o))return t.get(o);const e=document.createElement("canvas");if(!e.getContext("2d"))throw new Error("Failed to get canvas context");try{const n=`image/${o}`;return new Promise(i=>{e.toBlob(e=>{const r=null!==e&&e.type===n;t.set(o,r),i(r)},n,1)})}catch(e){return t.set(o,!1),!1}})}exports.compress=function(t,n){return e(this,void 0,void 0,function*(){return function(t,n){return e(this,void 0,void 0,function*(){var i;const{maxSizeMB:r=.1,quality:s=.9,maxWidth:a=800,maxHeight:c=null,downscaleDivisor:l=5,preferredFormat:u="webp",preserveExif:d=!1,resizeMode:m="contain",minQuality:h=.1,progressive:f=!1,debug:p=!1,outputFilename:g}=n,v=p?console.log.bind(console,"[ImageCompression]"):()=>{};v("Compression started");const w=c||a,y=1024*r*1024,x=yield Promise.all([u,"webp","avif","png","jpeg"].map(t=>e(this,void 0,void 0,function*(){return{format:t,supported:yield o(t)}}))),$=(null===(i=x.find(e=>e.supported))||void 0===i?void 0:i.format)||"jpeg";v(`Using format: ${$}`);const M=yield createImageBitmap(t);let b=M.width,F=M.height;(b>a*l||F>w*l)&&(b=Math.floor(b/l),F=Math.floor(F/l),console.log(`Quick downscale by divisor ${l} to ${b}x${F}`));let E=Math.min(a/b,w/F,1),z=Math.round(b*E),B=Math.round(F*E);const C=`image/${$}`,S="jpeg"===$?"jpg":$;v(`Output format: ${C}`);const j=t=>e(this,void 0,void 0,function*(){let e=h,o=s,n=null;for(;e<=o;){const i=(e+o)/2,r=yield new Promise(e=>t.toBlob(e,C,i));if(!r)throw new Error(`Compression failed for ${C}`);r.size<=y?(n=r,e=i+.05):o=i-.05}if(!n)throw new Error("Failed to compress image within size constraints");return n}),P=(e,t)=>{const o=document.createElement("canvas");o.width=e,o.height=t;const n=o.getContext("2d");if(!n)throw new Error("Failed to get canvas context");let i=M.width,r=M.height,s=0,a=0,c=e,l=t;switch(m){case"contain":const o=Math.min(e/i,t/r);c=i*o,l=r*o,s=(e-c)/2,a=(t-l)/2;break;case"cover":const n=Math.max(e/i,t/r);c=i*n,l=r*n,s=(e-c)/2,a=(t-l)/2;break;case"inside":const u=Math.min(e/i,t/r,1);c=i*u,l=r*u,s=(e-c)/2,a=(t-l)/2;break;case"outside":const d=Math.max(e/i,t/r,1);c=i*d,l=r*d,s=(e-c)/2,a=(t-l)/2}return n.imageSmoothingEnabled=!0,n.imageSmoothingQuality="high",n.drawImage(M,s,a,c,l),o};let k=null;for(;!k;){const e=P(z,B);k=yield j(e),(!k||k.size>y)&&(console.warn(`Still too big (${k?(k.size/1024).toFixed(1):"??"}KB), downscaling further`),z=Math.floor(.9*z),B=Math.floor(.9*B),k=null)}const Q=g||(t instanceof File?`${t.name.split(".")[0]}.${S}`:`image.${S}`),I=new File([k],Q,{type:k.type});return v(`âœ… Compression complete:\n    - Final size: ${(k.size/1024).toFixed(1)}KB\n    - Dimensions: ${z}x${B}\n    - Format: ${$}\n    - Filename: ${Q}\n    - Quality: ${s}`),I})}(t,n)})};
//# sourceMappingURL=image-compression.cjs.js.map
